name: CI

on: [pull_request]

jobs:
  structure_test_at_workspace_root:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel-structure_test_at_workspace_root
      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.7.5/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
      - name: Test
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test \
            --config=github \
            --build_metadata="GITHUB_SHA=${GITHUB_SHA}" \
            --build_metadata="GITHUB_SERVER_URL=${GITHUB_SERVER_URL}" \
            //:structure_test_at_workspace_root
  tests_slash_docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel-tests_slash_docker
      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.7.5/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
      - name: Test
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test \
            --config=github \
            --build_metadata="GITHUB_SHA=${GITHUB_SHA}" \
            --build_metadata="GITHUB_SERVER_URL=${GITHUB_SERVER_URL}" \
            //tests/docker/package_managers:download_pkgs_run_test \
            //tests/docker/package_managers:download_pkgs_with_additional_repos_run_test \
            //tests/docker/package_managers:gpg_test \
            //tests/docker/toolchain_container:test-rbe-test-xenial-with-pkgs \
            //tests/docker/util:test_extracted_file \
            //tests/docker/util:test_container_commit_metadata
  tests_slash_container:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel-tests_slash_container
      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.7.5/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
      - name: Test
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test \
            --config=github \
            --build_metadata="GITHUB_SHA=${GITHUB_SHA}" \
            --build_metadata="GITHUB_SERVER_URL=${GITHUB_SERVER_URL}" \
            --define=ENV_KEY=my_key \
            --define=ENV_VALUE=my_value \
            //tests/container:structure_test \
            //tests/container:deb_image_with_dpkgs_test \
            //tests/container:set_cmd_test \
            //tests/container:set_entrypoint_test \
            //tests/container:set_cmd_and_entrypoint_test \
            //tests/container:base_with_cmd_and_entrypoint_test \
            //tests/container:null_cmd_and_entrypoint_none_test \
            //tests/container:null_cmd_and_entrypoint_empty_str_test \
            //tests/container:null_cmd_and_entrypoint_empty_list_test \
            //tests/container:set_cmd_and_entrypoint_null_on_base_test \
            //tests/container:alpine_amd64_image_test \
            //tests/container:alpine_arm_image_test \
            //tests/container:alpine_ppc64le_image_test \
            //tests/container:set_env_csv_test \
            //tests/container:set_env_equals_test \
            //tests/container:set_env_make_vars_test \
            //tests/container:stripped_directory_name_test \
            //tests/container:new_alpine_linux_armv6_image_tar_test \
            //tests/container:new_alpine_linux_armv6_image_oci_tar_test \
            //tests/container:new_alpine_linux_armv6_image_oci_test \
            //tests/container:alpine_linux_amd64_image_tar_test \
            //tests/container:alpine_linux_amd64_image_oci_tar_test \
            //tests/container:alpine_linux_amd64_image_oci_test \
            //tests/container:new_alpine_linux_ppc64le_image_tar_test \
            //tests/container:new_alpine_linux_ppc64le_image_oci_tar_test \
            //tests/container:new_alpine_linux_ppc64le_image_oci_test \
            //tests/container/cc:all \
            //tests/container/go:all \
            //tests/container/groovy:all \
            //tests/container/java:all \
            //tests/container/nodejs:all \
            //tests/container/python:all \
            //tests/container/python3:all \
            //tests/container/rust:all \
            //tests/container/scala:all
  testing_slash_java_image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel-testing_slash_java_image
      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.7.5/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
      - name: Test
        run: |
          cd testing/java_image
          cp ./.github/workflows/.bazelrc .
          "${GITHUB_WORKSPACE}/bin/bazel" test \
            --config=github \
            --build_metadata="GITHUB_SHA=${GITHUB_SHA}" \
            --build_metadata="GITHUB_SERVER_URL=${GITHUB_SERVER_URL}" \
            //...
